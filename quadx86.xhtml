<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<meta name="viewport" content="width=device-width, initial-scale=0.4"/>
<meta name="google" content="notranslate" />
<link rel="canonical" href="https://sleef.org/dft.xhtml" />
<link rel="icon" href="favicon.png" />
<link rel="stylesheet" type="text/css" href="texlike.css"/>
<link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Ubuntu" />
<link rel="stylesheet" type="text/css" href="sleef.css"/>
<title>SLEEF - Quad-precision math library reference (x86)</title>
</head>
<body translate="no" class="notranslate">
<h1>SLEEF Documentation - Quad-precision math library reference (x86)</h1>

<h2>Table of contents</h2>

<ul class="none" style="font-family: arial, sansserif; padding-left: 0.5cm;">
  <li><a class="underlined" href="index.xhtml">Introduction</a></li>
  <li><a class="underlined" href="compile.xhtml">Compiling and installing the library</a></li>
  <li><a class="underlined" href="purec.xhtml">Math library reference</a></li>
  <li>&nbsp;</li>
  <li><a class="underlined" href="quad.xhtml"> Quad-precision math library reference</a>
  <ul class="disc">
    <li><a class="underlined" href="quad.xhtml">Data types and functions for all architectures</a></li>
    <li><a class="underlined" href="quadx86.xhtml">Data types and functions for x86 architecture</a></li>
    <ul class="circle">
      <li><a href="#datatypes">Data types</a></li>
      <li><a href="#conversion">Conversion functions</a></li>
      <li><a href="#comparison">Comparison functions</a></li>
      <li><a href="#mathfunctions">Math functions</a></li>
    </ul>
    <li><a class="underlined" href="quadaarch64.xhtml">Data types and functions for AArch64 architecture</a></li>
    <li><a class="underlined" href="quadppc64.xhtml">Data types and functions for PPC64 architecture</a></li>
    <li><a class="underlined" href="quads390x.xhtml">Data types and functions for System/390 architecture</a></li>
  </ul>
  </li>
  <li>&nbsp;</li>
  <li><a class="underlined" href="dft.xhtml">DFT library reference</a></li>
  <li><a class="underlined" href="misc.xhtml">Other tools included in the package</a></li>
  <li><a class="underlined" href="benchmark.xhtml">Benchmark results</a></li>
  <li><a class="underlined" href="additional.xhtml">Additional notes</a></li>
</ul>

<h2 id="datatypes">Data types</h2>

<p class="noindent">
  Two vector registers are combined to retain a vector of QP FP
  numbers. One of these registers holds the upper part of QP numbers,
  and the other register holds the lower part. You have to use the
  dedicated functions to access each element in a vector variable.
</p>

<br/>

<p class="funcname"><b class="type">Sleef_quadx2</b></p>

<p class="header">Description</p>

<p class="noindent">
  <b class="type">Sleef_quadx2</b> is a data type for retaining two QP
  FP numbers. Please
  use <a href="#load"><b class="func">Sleef_loadq2_sse2</b></a>, <a href="#store"><b class="func">Sleef_storeq2_sse2</b></a>, <a href="#get"><b class="func">Sleef_getq2_sse2</b></a>
  and <a href="#set"><b class="func">Sleef_setq2_sse2</b></a> functions to access the
  data inside variables in this data type.
</p>

<hr/>

<p class="funcname"><b class="type">Sleef_quadx4</b></p>

<p class="header">Description</p>

<p class="noindent">
  <b class="type">Sleef_quadx4</b> is a data type for retaining four QP
  FP numbers. Please
  use <a href="#load"><b class="func">Sleef_loadq4_avx</b></a>, <a href="#store"><b class="func">Sleef_storeq4_avx</b></a>, <a href="#get"><b class="func">Sleef_getq4_avx</b></a>
  and <a href="#set"><b class="func">Sleef_setq4_avx</b></a> functions to access the
  data inside variables in this data type.
</p>

<hr/>

<p class="funcname"><b class="type">Sleef_quadx8</b></p>

<p class="header">Description</p>

<p class="noindent">
  <b class="type">Sleef_quadx8</b> is a data type for retaining eight QP
  FP numbers. Please
  use <a href="#load"><b class="func">Sleef_loadq8_avx512f</b></a>, <a href="#store"><b class="func">Sleef_storeq8_avx512f</b></a>, <a href="#get"><b class="func">Sleef_getq8_avx512f</b></a>
  and <a href="#set"><b class="func">Sleef_setq8_avx512f</b></a> functions to access the
  data inside variables in this data type.
</p>



<h2 id="conversion">Functions for accessing elements inside vector variable</h2>

<p id="load" class="funcname">Load QP FP values into vector variable</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_loadq2_sse2</b>( <b class="type">Sleef_quad *</b> <i class="var">ptr</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_loadq4_avx</b>( <b class="type">Sleef_quad *</b> <i class="var">ptr</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_loadq4_avx2</b>( <b class="type">Sleef_quad *</b> <i class="var">ptr</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_loadq8_avx512f</b>( <b class="type">Sleef_quad *</b> <i class="var">ptr</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions load QP FP values from memory and store the results
  in a vector variable.
</p>

<hr/>

<p id="store" class="funcname">Store QP FP values in a vector variable to memory</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">void</b> <b class="func">Sleef_storeq2_sse2</b>( <b class="type">Sleef_quad *</b> <i class="var">ptr</i>, <b class="type">Sleef_quadx2</b> <i class="var">v</i> );<br/>
<b class="type">void</b> <b class="func">Sleef_storeq4_avx</b>( <b class="type">Sleef_quad *</b> <i class="var">ptr</i>, <b class="type">Sleef_quadx4</b> <i class="var">v</i> );<br/>
<b class="type">void</b> <b class="func">Sleef_storeq4_avx2</b>( <b class="type">Sleef_quad *</b> <i class="var">ptr</i>, <b class="type">Sleef_quadx4</b> <i class="var">v</i> );<br/>
<b class="type">void</b> <b class="func">Sleef_storeq8_avx512f</b>( <b class="type">Sleef_quad *</b> <i class="var">ptr</i>, <b class="type">Sleef_quadx8</b> <i class="var">v</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions store QP FP values in the given variable to memory.
</p>

<hr/>

<p id="get" class="funcname">Extract one element from QP FP vector variable</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_getq2_sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">v</i>, <b class="type">int</b> <i class="var">index</i> );<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_getq4_avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">v</i>, <b class="type">int</b> <i class="var">index</i> );<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_getq4_avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">v</i>, <b class="type">int</b> <i class="var">index</i> );<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_getq8_avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">v</i>, <b class="type">int</b> <i class="var">index</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions extract the <i class="var">index</i>-th element from
  a QP FP vector variable. 
</p>

<hr/>

<p id="set" class="funcname">Set one element in QP FP vector variable</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_setq2_sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">v</i>, <b class="type">int</b> <i class="var">index</i>, <b class="type">Sleef_quad</b> <i class="var">e</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_setq4_avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">v</i>, <b class="type">int</b> <i class="var">index</i>, <b class="type">Sleef_quad</b> <i class="var">e</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_setq4_avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">v</i>, <b class="type">int</b> <i class="var">index</i>, <b class="type">Sleef_quad</b> <i class="var">e</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_setq8_avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">v</i>, <b class="type">int</b> <i class="var">index</i>, <b class="type">Sleef_quad</b> <i class="var">e</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions return a QP FP vector in which
  the <i class="var">index</i>-th element is <i class="var">e</i>, and
  other elements are the same as <i class="var">v</i>.
</p>


<h2 id="conversion">Conversion functions</h2>

<p class="funcname">Convert QP number to double-precision number</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">__m128d</b> <b class="func">Sleef_cast_to_doubleq2_sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i> );<br/>
<b class="type">__m256d</b> <b class="func">Sleef_cast_to_doubleq4_avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">__m256d</b> <b class="func">Sleef_cast_to_doubleq4_avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">__m512d</b> <b class="func">Sleef_cast_to_doubleq8_avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions convert a QP FP value to a double-precision value.
</p>

<hr/>

<p class="funcname">Convert double-precision number to QP number</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_cast_from_doubleq2_sse2</b>( <b class="type">__m128d</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_cast_from_doubleq4_avx</b>( <b class="type">__m256d</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_cast_from_doubleq4_avx2</b>( <b class="type">__m256d</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_cast_from_doubleq8_avx512f</b>( <b class="type">__m512d</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions convert a double-precision value to a QP FP value.
</p>

<hr/>


<p class="funcname">Convert QP number to 64-bit signed integer</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cast_to_int64q2_sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i> );<br/>
<b class="type">__m256i</b> <b class="func">Sleef_cast_to_int64q4_avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">__m256i</b> <b class="func">Sleef_cast_to_int64q4_avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">__m512i</b> <b class="func">Sleef_cast_to_int64q8_avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions convert a QP FP value to a 64-bit signed integer.
</p>

<hr/>


<p class="funcname">Convert 64-bit signed integer to QP number</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_cast_from_int64q2_sse2</b>( <b class="type">__m128i</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_cast_from_int64q4_avx</b>( <b class="type">__m256i</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_cast_from_int64q4_avx2</b>( <b class="type">__m256i</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_cast_from_int64q8_avx512f</b>( <b class="type">__m512i</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions convert a 64-bit signed integer to a QP FP value.
</p>

<hr/>


<p class="funcname">Convert QP number to 64-bit unsigned integer</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cast_to_uint64q2_sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i> );<br/>
<b class="type">__m256i</b> <b class="func">Sleef_cast_to_uint64q4_avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">__m256i</b> <b class="func">Sleef_cast_to_uint64q4_avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">__m512i</b> <b class="func">Sleef_cast_to_uint64q8_avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions convert a QP FP value to a 64-bit signed integer.
</p>

<hr/>


<p class="funcname">Convert 64-bit unsigned integer to QP number</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_cast_from_uint64q2_sse2</b>( <b class="type">__m128i</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_cast_from_uint64q4_avx</b>( <b class="type">__m256i</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_cast_from_uint64q4_avx2</b>( <b class="type">__m256i</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_cast_from_uint64q8_avx512f</b>( <b class="type">__m512i</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions convert a 64-bit unsigned integer to a QP FP value.
</p>


<h2 id="comparison">Comparison functions</h2>

<p class="funcname">QP comparison functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpltq2_sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i>, <b class="type">Sleef_quadx2</b> <i class="var">b</i> );<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpleq2_sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i>, <b class="type">Sleef_quadx2</b> <i class="var">b</i> );<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpgtq2_sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i>, <b class="type">Sleef_quadx2</b> <i class="var">b</i> );<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpgeq2_sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i>, <b class="type">Sleef_quadx2</b> <i class="var">b</i> );<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpeqq2_sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i>, <b class="type">Sleef_quadx2</b> <i class="var">b</i> );<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpneq2_sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i>, <b class="type">Sleef_quadx2</b> <i class="var">b</i> );<br/>
<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpltq4_avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpleq4_avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpgtq4_avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpgeq4_avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpeqq4_avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpneq4_avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpltq4_avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpleq4_avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpgtq4_avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpgeq4_avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpeqq4_avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpneq4_avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<br/>
<b class="type">__m256i</b> <b class="func">Sleef_cmpltq8_avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i>, <b class="type">Sleef_quadx8</b> <i class="var">b</i> );<br/>
<b class="type">__m256i</b> <b class="func">Sleef_cmpleq8_avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i>, <b class="type">Sleef_quadx8</b> <i class="var">b</i> );<br/>
<b class="type">__m256i</b> <b class="func">Sleef_cmpgtq8_avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i>, <b class="type">Sleef_quadx8</b> <i class="var">b</i> );<br/>
<b class="type">__m256i</b> <b class="func">Sleef_cmpgeq8_avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i>, <b class="type">Sleef_quadx8</b> <i class="var">b</i> );<br/>
<b class="type">__m256i</b> <b class="func">Sleef_cmpeqq8_avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i>, <b class="type">Sleef_quadx8</b> <i class="var">b</i> );<br/>
<b class="type">__m256i</b> <b class="func">Sleef_cmpneq8_avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i>, <b class="type">Sleef_quadx8</b> <i class="var">b</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These are the vectorized functions of <a class="underlined"
  href="quad.xhtml#basicComparison">comparison functions</a>.
</p>

<hr/>

<p class="funcname">QP comparison functions of the second kind</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpq2_sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i>, <b class="type">Sleef_quadx2</b> <i class="var">b</i> );<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpq4_avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">__m128i</b> <b class="func">Sleef_cmpq4_avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">__m256i</b> <b class="func">Sleef_cmpq8_avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i>, <b class="type">Sleef_quadx8</b> <i class="var">b</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These are the vectorized functions
  of <a href="quad.xhtml#Sleef_cmpq1_purec"><b class="func">Sleef_cmpq1_purec</b></a>.
</p>

<hr/>

<p class="funcname">Check orderedness</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">__m128i</b> <b class="func">Sleef_unordq2_sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i>, <b class="type">Sleef_quadx2</b> <i class="var">b</i> );<br/>
<b class="type">__m128i</b> <b class="func">Sleef_unordq4_avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">__m128i</b> <b class="func">Sleef_unordq4_avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">__m256i</b> <b class="func">Sleef_unordq8_avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i>, <b class="type">Sleef_quadx8</b> <i class="var">b</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These are the vectorized functions
  of <a href="quad.xhtml#Sleef_unordq1_purec"><b class="func">Sleef_unordq1_purec</b></a>.
</p>


<h2 id="mathfunctions">Math functions</h2>

<p class="funcname">QP functions for basic arithmetic operations</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_addq2_u05sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i>, <b class="type">Sleef_quadx2</b> <i class="var">b</i> );<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_subq2_u05sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i>, <b class="type">Sleef_quadx2</b> <i class="var">b</i> );<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_mulq2_u05sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i>, <b class="type">Sleef_quadx2</b> <i class="var">b</i> );<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_divq2_u05sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i>, <b class="type">Sleef_quadx2</b> <i class="var">b</i> );<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_negq2_sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i> );<br/>
<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_addq4_u05avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_subq4_u05avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_mulq4_u05avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_divq4_u05avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_negq4_avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_addq4_u05avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_subq4_u05avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_mulq4_u05avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_divq4_u05avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i>, <b class="type">Sleef_quadx4</b> <i class="var">b</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_negq4_avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_addq8_u05avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i>, <b class="type">Sleef_quadx8</b> <i class="var">b</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_subq8_u05avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i>, <b class="type">Sleef_quadx8</b> <i class="var">b</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_mulq8_u05avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i>, <b class="type">Sleef_quadx8</b> <i class="var">b</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_divq8_u05avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i>, <b class="type">Sleef_quadx8</b> <i class="var">b</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_negq8_avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These are the vectorized functions of <a class="underlined"
  href="quad.xhtml#basicArithmetic">the basic arithmetic operations</a>.
</p>

<hr/>

<p class="funcname">Square root functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_sqrtq2_u05sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_sqrtq4_u05avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_sqrtq4_u05avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_sqrtq8_u05avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These are the vectorized functions
  of <a href="quad.xhtml#Sleef_sqrtq1_u05purec"><b class="func">Sleef_sqrtq1_u05purec</b></a>.
</p>

<hr/>

<p class="funcname">Sine functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_sinq2_u10sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_sinq4_u10avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_sinq4_u10avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_sinq8_u10avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These are the vectorized functions
  of <a href="quad.xhtml#Sleef_sinq1_u10purec"><b class="func">Sleef_sinq1_u10purec</b></a>.
</p>

<hr/>

<p class="funcname">Cosine functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_cosq2_u10sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_cosq4_u10avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_cosq4_u10avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_cosq8_u10avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These are the vectorized functions
  of <a href="quad.xhtml#Sleef_cosq1_u10purec"><b class="func">Sleef_cosq1_u10purec</b></a>.
</p>

<hr/>

<p class="funcname">Tangent functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_tanq2_u10sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_tanq4_u10avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_tanq4_u10avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_tanq8_u10avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These are the vectorized functions
  of <a href="quad.xhtml#Sleef_tanq1_u10purec"><b class="func">Sleef_tanq1_u10purec</b></a>.
</p>

<hr/>

<p class="funcname">Arc sine functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_asinq2_u10sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_asinq4_u10avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_asinq4_u10avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_asinq8_u10avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These are the vectorized functions
  of <a href="quad.xhtml#Sleef_asinq1_u10purec"><b class="func">Sleef_asinq1_u10purec</b></a>.
</p>

<hr/>

<p class="funcname">Arc cosine functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_acosq2_u10sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_acosq4_u10avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_acosq4_u10avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_acosq8_u10avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These are the vectorized functions
  of <a href="quad.xhtml#Sleef_acosq1_u10purec"><b class="func">Sleef_acosq1_u10purec</b></a>.
</p>

<hr/>

<p class="funcname">Arc tangent functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_atanq2_u10sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_atanq4_u10avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_atanq4_u10avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_atanq8_u10avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These are the vectorized functions
  of <a href="quad.xhtml#Sleef_atanq1_u10purec"><b class="func">Sleef_atanq1_u10purec</b></a>.
</p>

<hr/>

<p class="funcname">Base-<i>e</i> exponential functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_expq2_u10sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_expq4_u10avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_expq4_u10avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_expq8_u10avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These are the vectorized functions
  of <a href="quad.xhtml#Sleef_expq1_u10purec"><b class="func">Sleef_expq1_u10purec</b></a>.
</p>

<hr/>

<p class="funcname">Base-2 exponential functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_exp2q2_u10sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_exp2q4_u10avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_exp2q4_u10avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_exp2q8_u10avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These are the vectorized functions
  of <a href="quad.xhtml#Sleef_exp2q1_u10purec"><b class="func">Sleef_exp2q1_u10purec</b></a>.
</p>

<hr/>

<p class="funcname">Base-10 exponentail</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_exp10q2_u10sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_exp10q4_u10avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_exp10q4_u10avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_exp10q8_u10avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These are the vectorized functions
  of <a href="quad.xhtml#Sleef_exp10q1_u10purec"><b class="func">Sleef_exp10q1_u10purec</b></a>.
</p>

<hr/>

<p class="funcname">Base-<i>e</i> exponential functions minus 1</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_expm1q2_u10sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_expm1q4_u10avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_expm1q4_u10avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_expm1q8_u10avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These are the vectorized functions
  of <a href="quad.xhtml#Sleef_expm1q1_u10purec"><b class="func">Sleef_expm1q1_u10purec</b></a>.
</p>

<hr/>

<p class="funcname">Natural logarithmic functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_logq2_u10sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_logq4_u10avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_logq4_u10avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_logq8_u10avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These are the vectorized functions
  of <a href="quad.xhtml#Sleef_logq1_u10purec"><b class="func">Sleef_logq1_u10purec</b></a>.
</p>

<hr/>

<p class="funcname">Base-2 logarithmic functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_log2q2_u10sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_log2q4_u10avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_log2q4_u10avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_log2q8_u10avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These are the vectorized functions
  of <a href="quad.xhtml#Sleef_log2q1_u10purec"><b class="func">Sleef_log2q1_u10purec</b></a>.
</p>

<hr/>

<p class="funcname">Base-10 logarithmic functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_log10q2_u10sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_log10q4_u10avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_log10q4_u10avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_log10q8_u10avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These are the vectorized functions
  of <a href="quad.xhtml#Sleef_log10q1_u10purec"><b class="func">Sleef_log10q1_u10purec</b></a>.
</p>

<hr/>

<p class="funcname">Logarithm of one plus argument</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quadx2</b> <b class="func">Sleef_log1pq2_u10sse2</b>( <b class="type">Sleef_quadx2</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_log1pq4_u10avx</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx4</b> <b class="func">Sleef_log1pq4_u10avx2</b>( <b class="type">Sleef_quadx4</b> <i class="var">a</i> );<br/>
<b class="type">Sleef_quadx8</b> <b class="func">Sleef_log1pq8_u10avx512f</b>( <b class="type">Sleef_quadx8</b> <i class="var">a</i> );<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These are the vectorized functions
  of <a href="quad.xhtml#Sleef_log1pq1_u10purec"><b class="func">Sleef_log1pq1_u10purec</b></a>.
</p>


<p class="footer">
  Copyright &copy; 2020 SLEEF Project.<br/>
  SLEEF is open-source software and is distributed under the Boost Software License, Version 1.0.
</p>

<script type="text/javascript">
//<![CDATA[
var sc_project=11391936;
var sc_invisible=1;
var sc_security="fa400da8";
//]]>
</script>
<script type="text/javascript" src="https://www.statcounter.com/counter/counter_xhtml.js"></script>


</body>
</html>
