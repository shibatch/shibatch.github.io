<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<meta name="viewport" content="width=device-width, initial-scale=0.4"/>
<meta name="google" content="notranslate" />
<link rel="canonical" href="https://sleef.org/dft.xhtml" />
<link rel="icon" href="favicon.png" />
<link rel="stylesheet" type="text/css" href="texlike.css"/>
<link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Ubuntu" />
<link rel="stylesheet" type="text/css" href="sleef.css"/>
<title>SLEEF - Quad-precision math library reference</title>
</head>
<body translate="no" class="notranslate">
<h1>SLEEF Documentation - Quad-precision math library reference</h1>

<h2>Table of contents</h2>

<ul class="none" style="font-family: arial, sansserif; padding-left: 0.5cm;">
  <li><a class="underlined" href="index.xhtml">Introduction</a></li>
  <li><a class="underlined" href="compile.xhtml">Compiling and installing the library</a></li>
  <li><a class="underlined" href="purec.xhtml">Math library reference</a></li>
  <li>&nbsp;</li>
  <li><a class="underlined" href="quad.xhtml"> Quad-precision math library reference</a></li>
    <ul class="disc">
      <li><a href="quad.xhtml#introduction">Introduction</a></li>
      <li><a href="quad.xhtml#datatypes">Data types</a></li>
      <li><a href="quad.xhtml#conversion">Conversion and output functions</a></li>
      <li><a href="quad.xhtml#comparison">Comparison functions</a></li>
      <li><a href="quad.xhtml#mathfunctions">Math functions</a></li>
    </ul>
  <li>&nbsp;</li>
  <li><a class="underlined" href="dft.xhtml">DFT library reference</a></li>
  <li><a class="underlined" href="misc.xhtml">Other tools included in the package</a></li>
  <li><a class="underlined" href="benchmark.xhtml">Benchmark results</a></li>
  <li><a class="underlined" href="additional.xhtml">Additional notes</a></li>
</ul>

<h2 id="introduction">Introduction</h2>

<p class="noindent">
  As of version 3.6, SLEEF includes a quad-precision math
  library. This library includes various functions for computing with
  IEEE 754 quadruple-precision(QP) floating-point numbers. If the
  compiler natively supports IEEE-754 QP FP type, numbers in this
  natively supported QP data type can be directly passed to the
  library functions. Otherwise, the library defines a data type for
  retaining numbers in IEEE-754 QP data type.
</p>

<p>
  Many of the functions are fully vectorized to maximize the
  throughput of computation. For these functions, two vector registers
  are combined to retain a vector of QP FP numbers, where one of these
  registers holds the upper part of QP numbers, and the other register
  holds the lower part. Dedicated functions are provided to load to or
  store from variables in vector QP data types.
</p>

<h2 id="datatypes">Data types</h2>

<p class="funcname"><b class="type">Sleef_quad</b></p>

<p class="header">Description</p>

<p class="noindent">
  <b class="type">Sleef_quad</b> is a data type for retaining a single
  QP FP number. If the compiler natively supports IEEE-754 quad
  precision FP type, then <b class="type">Sleef_quad</b> is an alias of
  that data type.
</p>

<pre class="white">typedef __float128 Sleef_quad;</pre>

<p class="noindent">
  Otherwise, the library defines a 128-bit data type for retaining a number in
  IEEE-754 QP data format.
</p>


<h2 id="conversion">Conversion and output functions</h2>

<p class="funcname"><b id="Sleef_strtoq" class="func">Sleef_strtoq</b> - convert ASCII string to QP FP number</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_strtoq</b>(<b class="type">const char *</b> <i class="var">str</i>, <b class="type">char **</b> <i class="var">endptr</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  This is a QP version of the strtod function. It converts the given
  string to a QP FP number. It supports converting from both decimal
  and hexadecimal numbers.
</p>

<hr/>

<p class="funcname"><b id="Sleef_printf" class="func">Sleef_printf</b>, <b id="Sleef_fprintf" class="func">Sleef_fprintf</b>, <b id="Sleef_snprintf" class="func">Sleef_snprintf</b>, <b id="Sleef_vprintf" class="func">Sleef_vprintf</b>, <b id="Sleef_vfprintf" class="func">Sleef_vfprintf</b>, <b id="Sleef_vsnprintf" class="func">Sleef_vsnprintf</b> - Format various data into string and output</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">int</b> <b class="func">Sleef_printf</b>(<b class="type">const char *</b> <i class="var">fmt</i>, ... );<br/>
<b class="type">int</b> <b class="func">Sleef_fprintf</b>(<b class="type">FILE *</b> <i class="var">fp</i>, <b class="type">const char *</b> <i class="var">fmt</i>, ... );<br/>
<b class="type">int</b> <b class="func">Sleef_snprintf</b>(<b class="type">char *</b> <i class="var">str</i>, <b class="type">size_t</b> <i class="var">size</i>, <b class="type">const char *</b> <i class="var">fmt</i>, ... );<br/>
<b class="type">int</b> <b class="func">Sleef_vprintf</b>(<b class="type">const char *</b> <i class="var">fmt</i>, <b class="type">va_list</b> <i class="var">ap</i>);<br/>
<b class="type">int</b> <b class="func">Sleef_vfprintf</b>(<b class="type">FILE *</b> <i class="var">fp</i>, <b class="type">const char *</b> <i class="var">fmt</i>, <b class="type">va_list</b> <i class="var">ap</i>);<br/>
<b class="type">int</b> <b class="func">Sleef_vsnprintf</b>(<b class="type">char *</b> <i class="var">str</i>, <b class="type">size_t</b> <i class="var">size</i>, <b class="type">const char *</b> <i class="var">fmt</i>, <b class="type">va_list</b> <i class="var">ap</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions are equivalent to the corresponding <b class="func">printf</b> functions
  in the C standard, except for the following extensions. These
  functions support converting from QP FP numbers using <b>Q</b>
  and <b>P</b> modifiers with <b>a</b>, <b>e</b>, <b>f</b>
  and <b>g</b> conversions. With <b>Q</b> modifier, an immediate QP FP
  value can be passed to these functions, while a QP FP value can be
  passed via a pointer with <b>P</b> modifier. These functions only
  supports the format strings defined in the C standard.
</p>

<hr/>

<p class="funcname"><b id="Sleef_registerPrintfHook" class="func">Sleef_registerPrintfHook</b>, <b id="Sleef_registerPrintfHook" class="func">Sleef_unregisterPrintfHook</b> - Register and unregister C library hooks to printf family funcions in the GNU C Library</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">void</b> <b class="func">Sleef_registerPrintfHook</b>(<b class="type">void</b>);<br/>
<b class="type">void</b> <b class="func">Sleef_unregisterPrintfHook</b>(<b class="type">void</b>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions are defined only on systems with Glibc. Glibc has a
  functionality for installing C library hooks to extend conversion
  capability of its printf-familiy
  functions. <b class="func">Sleef_registerPrintfHook</b> installs C
  library hooks to add support for the <b>Q</b> and <b>P</b>
  modifiers. <b class="func">Sleef_unregisterPrintfHook</b> uninstalls
  the C library hooks.
</p>

<hr/>

<p class="funcname"><b id="Sleef_cast_to_doubleq1_purec" class="func">Sleef_cast_to_doubleq1_purec</b>, <b id="Sleef_cast_to_doubleq1_purecfma" class="func">Sleef_cast_to_doubleq1_purecfma</b> - Convert QP number to double-precision number</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">double</b> <b class="func">Sleef_cast_to_doubleq1_purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<b class="type">double</b> <b class="func">Sleef_cast_to_doubleq1_purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions convert a QP FP value to a double-precision value.
</p>

<hr/>

<p class="funcname"><b id="Sleef_cast_from_doubleq1_purec" class="func">Sleef_cast_from_doubleq1_purec</b>, <b id="Sleef_cast_from_doubleq1_purecfma" class="func">Sleef_cast_from_doubleq1_purecfma</b> - Convert double-precision number to QP number</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_cast_from_doubleq1_purec</b>(<b class="type">double</b> <i class="var">a</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_cast_from_doubleq1_purecfma</b>(<b class="type">double</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions convert a double-precision value to a QP FP value.
</p>

<hr/>


<p class="funcname"><b id="Sleef_cast_to_int64q1_purec" class="func">Sleef_cast_to_int64q1_purec</b>, <b id="Sleef_cast_to_int64q1_purecfma" class="func">Sleef_cast_to_int64q1_purecfma</b> - Convert QP number to 64-bit signed integer</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">int64_t</b> <b class="func">Sleef_cast_to_int64q1_purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<b class="type">int64_t</b> <b class="func">Sleef_cast_to_int64q1_purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions convert a QP FP value to a 64-bit signed integer.
</p>

<hr/>


<p class="funcname"><b id="Sleef_cast_from_int64q1_purec" class="func">Sleef_cast_from_int64q1_purec</b>, <b id="Sleef_cast_from_int64q1_purecfma" class="func">Sleef_cast_from_int64q1_purecfma</b> - Convert 64-bit signed integer to QP number</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_cast_from_int64q1_purec</b>(<b class="type">int64_t</b> <i class="var">a</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_cast_from_int64q1_purecfma</b>(<b class="type">int64_t</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions convert a 64-bit signed integer to a QP FP value.
</p>

<hr/>


<p class="funcname"><b id="Sleef_cast_to_uint64q1_purec" class="func">Sleef_cast_to_uint64q1_purec</b>, <b id="Sleef_cast_to_uint64q1_purecfma" class="func">Sleef_cast_to_uint64q1_purecfma</b> - Convert QP number to 64-bit signed unsigned integer</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">uint64_t</b> <b class="func">Sleef_cast_to_uint64q1_purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<b class="type">uint64_t</b> <b class="func">Sleef_cast_to_uint64q1_purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions convert a QP FP value to a 64-bit signed integer.
</p>

<hr/>


<p class="funcname"><b id="Sleef_cast_from_uint64q1_purec" class="func">Sleef_cast_from_uint64q1_purec</b>, <b id="Sleef_cast_from_uint64q1_purecfma" class="func">Sleef_cast_from_uint64q1_purecfma</b> - Convert 64-bit signed unsigned integer to QP number</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_cast_from_uint64q1_purec</b>(<b class="type">uint64_t</b> <i class="var">a</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_cast_from_uint64q1_purecfma</b>(<b class="type">uint64_t</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions convert a 64-bit unsigned integer to a QP FP value.
</p>


<h2 id="comparison">Comparison functions</h2>

<p class="funcname">QP comparison functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">int32_t</b> <b class="func">Sleef_cmpltq1_purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<b class="type">int32_t</b> <b class="func">Sleef_cmpleq1_purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<b class="type">int32_t</b> <b class="func">Sleef_cmpgtq1_purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<b class="type">int32_t</b> <b class="func">Sleef_cmpgeq1_purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<b class="type">int32_t</b> <b class="func">Sleef_cmpeqq1_purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<b class="type">int32_t</b> <b class="func">Sleef_cmpneq1_purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<br/>
<b class="type">int32_t</b> <b class="func">Sleef_cmpltq1_purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<b class="type">int32_t</b> <b class="func">Sleef_cmpleq1_purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<b class="type">int32_t</b> <b class="func">Sleef_cmpgtq1_purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<b class="type">int32_t</b> <b class="func">Sleef_cmpgeq1_purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<b class="type">int32_t</b> <b class="func">Sleef_cmpeqq1_purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<b class="type">int32_t</b> <b class="func">Sleef_cmpneq1_purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions compare two QP FP
  values. The <b>lt</b>, <b>le</b>, <b>gt</b>, <b>ge</b>, <b>eq</b>
  and <b>ne</b> functions return 1 if and only
  if <i class="var">a</i> is less than, less or equal, greather than,
  greater or equal, equal and not equal, respectively. Otherwise, 0 is
  returned.
</p>

<hr/>

<p class="funcname"><b id="Sleef_cmpq1_purec" class="func">Sleef_cmpq1_purec</b>, <b id="Sleef_cmpq1_purecfma" class="func">Sleef_cmpq1_purecfma</b> - QP comparison</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">int32_t</b> <b class="func">Sleef_cmpq1_purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<b class="type">int32_t</b> <b class="func">Sleef_cmpq1_purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions compare two QP FP values. If <i class="var">a</i> is
  greater than <i class="var">b</i>, they return
  1. If <i class="var">a</i> is less than <i class="var">b</i>, they
  return -1. Otherwise, they return 0. If either argument is NaN, they
  return 0.
</p>

<hr/>

<p class="funcname"><b id="Sleef_unordq1_purec" class="func">Sleef_unordq1_purec</b>, <b id="Sleef_unordq1_purecfma" class="func">Sleef_unordq1_purecfma</b> - Check orderedness</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">int32_t</b> <b class="func">Sleef_unordq1_purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<b class="type">int32_t</b> <b class="func">Sleef_unordq1_purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions return 1 if either argument is NaN, otherwise 0.
</p>


<h2 id="mathfunctions">Math functions</h2>

<p class="funcname">QP functions for basic arithmetic operations</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_addq1_u05purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_subq1_u05purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_mulq1_u05purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_divq1_u05purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_negq1_purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_addq1_u05purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_subq1_u05purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_mulq1_u05purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_divq1_u05purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>, <b class="type">Sleef_quad</b> <i class="var">b</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_negq1_purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  The add, sub, mul and div functions perform addition, subtraction,
  multiplication and division of two QP FP values. The error bound of
  these functions are 0.5000000001 ULP. The neg functions return
  -<i class="var">a</i>.
</p>

<hr/>

<p class="funcname"><b id="Sleef_sqrtq1_u05purec" class="func">Sleef_sqrtq1_u05purec</b>, <b id="Sleef_sqrtq1_u05purecfma" class="func">Sleef_sqrtq1_u05purecfma</b> - square root function</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_sqrtq1_u05purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_sqrtq1_u05purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions return nonnegative square root of a value
  in <i class="var">a</i>. The error bound of the returned value is
  0.5000000001 ULP.
</p>

<hr/>

<p class="funcname"><b id="Sleef_sinq1_u10purec" class="func">Sleef_sinq1_u10purec</b>, <b id="Sleef_sinq1_u10purecfma" class="func">Sleef_sinq1_u10purecfma</b> - sine functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_sinq1_u10purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_sinq1_u10purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions evaluate the sine function of a value
  in <i class="var">a</i>. The error bound of the returned value is
  1.0 ULP.
</p>

<hr/>

<p class="funcname"><b id="Sleef_cosq1_u10purec" class="func">Sleef_cosq1_u10purec</b>, <b id="Sleef_cosq1_u10purecfma" class="func">Sleef_cosq1_u10purecfma</b> - cosine functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_cosq1_u10purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_cosq1_u10purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions evaluate the cosine function of a value
  in <i class="var">a</i>. The error bound of the returned value is
  1.0 ULP.
</p>

<hr/>

<p class="funcname"><b id="Sleef_tanq1_u10purec" class="func">Sleef_tanq1_u10purec</b>, <b id="Sleef_tanq1_u10purecfma" class="func">Sleef_tanq1_u10purecfma</b> - tangent functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_tanq1_u10purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_tanq1_u10purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<hr/>

<p class="funcname"><b id="Sleef_asinq1_u10purec" class="func">Sleef_asinq1_u10purec</b>, <b id="Sleef_asinq1_u10purecfma" class="func">Sleef_asinq1_u10purecfma</b> - arc sine functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_asinq1_u10purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_asinq1_u10purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions evaluate the arc sine function of a value
  in <i class="var">a</i>. The error bound of the returned value is
  1.0 ULP.
</p>

<hr/>

<p class="funcname"><b id="Sleef_acosq1_u10purec" class="func">Sleef_acosq1_u10purec</b>, <b id="Sleef_acosq1_u10purecfma" class="func">Sleef_acosq1_u10purecfma</b> - arc cosine functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_acosq1_u10purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_acosq1_u10purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions evaluate the arc cosine function of a value
  in <i class="var">a</i>. The error bound of the returned value is
  1.0 ULP.
</p>

<hr/>

<p class="funcname"><b id="Sleef_atanq1_u10purec" class="func">Sleef_atanq1_u10purec</b>, <b id="Sleef_atanq1_u10purecfma" class="func">Sleef_atanq1_u10purecfma</b> - arc tangent functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_atanq1_u10purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_atanq1_u10purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions evaluate the arc tangent function of a value
  in <i class="var">a</i>. The error bound of the returned value is
  1.0 ULP.
</p>

<hr/>

<p class="funcname"><b id="Sleef_expq1_u10purec" class="func">Sleef_expq1_u10purec</b>, <b id="Sleef_expq1_u10purecfma" class="func">Sleef_expq1_u10purecfma</b> - base-<i>e</i> exponential functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_expq1_u10purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_expq1_u10purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions return the value of <i>e</i> raised
  to <i class="var">a</i>. The error bound of the returned value is
  1.0 ULP.
</p>

<hr/>

<p class="funcname"><b id="Sleef_exp2q1_u10purec" class="func">Sleef_exp2q1_u10purec</b>, <b id="Sleef_exp2q1_u10purecfma" class="func">Sleef_exp2q1_u10purecfma</b> - base-2 exponential functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_exp2q1_u10purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_exp2q1_u10purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions return 2 raised to <i class="var">a</i>. The error
  bound of the returned value is 1.0 ULP.
</p>

<hr/>

<p class="funcname"><b id="Sleef_exp10q1_u10purec" class="func">Sleef_exp10q1_u10purec</b>, <b id="Sleef_exp10q1_u10purecfma" class="func">Sleef_exp10q1_u10purecfma</b> - base-10 exponentail</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_exp10q1_u10purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_exp10q1_u10purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions return 10 raised to <i class="var">a</i>. The error
  bound of the returned value is 1.0 ULP.
</p>

<hr/>

<p class="funcname"><b id="Sleef_expm1q1_u10purec" class="func">Sleef_expm1q1_u10purec</b>, <b id="Sleef_expm1q1_u10purecfma" class="func">Sleef_expm1q1_u10purecfma</b> - base-<i>e</i> exponential functions minus 1</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_expm1q1_u10purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_expm1q1_u10purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions return the value one less than <i>e</i> raised
  to <i class="var">a</i>. The error bound of the returned value is
  1.0 ULP.
</p>

<hr/>

<p class="funcname"><b id="Sleef_logq1_u10purec" class="func">Sleef_logq1_u10purec</b>, <b id="Sleef_logq1_u10purecfma" class="func">Sleef_logq1_u10purecfma</b> - natural logarithmic functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_logq1_u10purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_logq1_u10purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions return the natural logarithm
  of <i class="var">a</i>.  The error bound of the returned value is
  1.0 ULP.
</p>

<hr/>

<p class="funcname"><b id="Sleef_log2q1_u10purec" class="func">Sleef_log2q1_u10purec</b>, <b id="Sleef_log2q1_u10purecfma" class="func">Sleef_log2q1_u10purecfma</b> - base-2 logarithmic functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_log2q1_u10purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_log2q1_u10purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions return the base-2 logarithm
  of <i class="var">a</i>.  The error bound of the returned value is
  1.0 ULP.
</p>

<hr/>

<p class="funcname"><b id="Sleef_log10q1_u10purec" class="func">Sleef_log10q1_u10purec</b>, <b id="Sleef_log10q1_u10purecfma" class="func">Sleef_log10q1_u10purecfma</b> - base-10 logarithmic functions</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_log10q1_u10purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_log10q1_u10purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions return the base-10 logarithm
  of <i class="var">a</i>.  The error bound of the returned value is
  1.0 ULP.
</p>

<hr/>

<p class="funcname"><b id="Sleef_log1pq1_u10purec" class="func">Sleef_log1pq1_u10purec</b>, <b id="Sleef_log1pq1_u10purecfma" class="func">Sleef_log1pq1_u10purecfma</b> - logarithm of one plus argument</p>

<p class="header">Synopsis</p>

<p class="synopsis">
#include &lt;sleefquad.h&gt;<br/>
<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_log1pq1_u10purec</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<b class="type">Sleef_quad</b> <b class="func">Sleef_log1pq1_u10purecfma</b>(<b class="type">Sleef_quad</b> <i class="var">a</i>);<br/>
<br/>
<span class="normal">Link with</span> -lsleefquad.
</p>

<p class="header">Description</p>

<p class="noindent">
  These functions return the natural logarithm of
  (1+<i class="var">a</i>).  The error bound of the returned value is
  1.0 ULP.
</p>


<p class="footer">
  Copyright &copy; 2020 SLEEF Project.<br/>
  SLEEF is open-source software and is distributed under the Boost Software License, Version 1.0.
</p>

<script type="text/javascript">
//<![CDATA[
var sc_project=11391936;
var sc_invisible=1;
var sc_security="fa400da8";
//]]>
</script>
<script type="text/javascript" src="https://www.statcounter.com/counter/counter_xhtml.js"></script>


</body>
</html>
