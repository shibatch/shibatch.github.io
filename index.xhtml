<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<meta name="viewport" content="width=1024" />
<link rel="stylesheet" type="text/css" href="texlike.css"/>
<link rel="stylesheet" type="text/css" href="sleef.css"/>
<title>SLEEF API Reference</title>
</head>
<body>
<h1>SLEEF API Reference - Introduction<img src="sleeflogo2.png" alt="logo" style="zoom: 20%; float: right" /></h1>

<br/>

<p style="font-size:1.2em; margin-top:0.5cm;">
  <a class="underlined" style="color:#0050a0;" href="https://github.com/shibatch/sleef/releases"><b>Download the latest version</b></a>
</p>

<p style="font-size:1.2em; margin-top:0.5cm;">
  <a class="underlined" style="color:#0050a0;" href="http://shibatch.github.io/"><b>See documentation on the web</b></a>
</p>

<h2>Table of contents</h2>

<ul class="none" style="font-size:14pt; font-family: arial, sansserif; padding-left: 0.5cm;">
  <li><a href="index.xhtml">Introduction</a>
    <ul class="disc">
      <li><a href="index.xhtml#overview">Overview</a></li>
      <li><a href="index.xhtml#environment">Supported environments</a></li>
      <li><a href="index.xhtml#install">Compiling and installing the library</a></li>
      <!--<li><a href="index.xhtml#compatibility">Compatibility with other libraries</a></li>-->
      <!--<li><a href="index.xhtml#porting">Porting</a></li>-->
      <li><a href="index.xhtml#credit">Credit</a></li>
      <li><a href="index.xhtml#license">License</a></li>
      <li><a href="index.xhtml#history">History of this software</a></li>
      <li><a href="index.xhtml#related">Related projects</a></li>
    </ul>
  </li>
  <li>&nbsp;</li>
  <li><a href="purec.xhtml">Math library reference</a></li>
  <li><a href="dft.xhtml">DFT library reference</a></li>
  <li><a href="misc.xhtml">Other tools included in the package</a></li>
  <li><a href="funcindex.xhtml">Function index</a></li>
  <li><a href="benchmark.xhtml">Benchmark results</a></li>
  <li><a href="additional.xhtml">Additional notes</a></li>
</ul>

<h2 id="overview">Overview</h2>

<p>
  SLEEF stands for SIMD Library for Evaluating Elementary
  Functions. SLEEF implements vectorized versions of all C99 math
  functions, that utilize SIMD instructions of modern processors to
  make computation more efficient. The library also includes
  vectorized DFT subroutines.
</p>

<p>
  The library contains subroutines for all C99 math functions in
  single precision and double precision. Different accuracy of the
  results can be chosen for a subset of the elementary functions; for
  this subset there are versions with up to 1 ulp error (which is the
  maximum error, not the average) and versions with a few ulp
  error. Obviously, less accurate versions are faster. Please note
  that we have 0.5 ulp maximum error when we convert an infinite
  precision real number into a floating point number. For non-finite
  inputs and outputs, the library should return the same results as
  libm. The library is tested if the evaluation error is within the
  designed limit. The library is tested against high-precision
  evaluation using the libmpfr library. Especially, we rigorously
  checked the error of the trigonometric functions when the arguments
  are close to an integral multiple of <i class="math">&pi;</i>/2.
</p>

<p>
  SLEEF is portable, since porting can be easily made just by writing
  the helper file, which is an abstraction layer of SIMD intrinsics.
</p>

<p>
  SLEEF is fast, since it is designed to fully utilize SIMD
  computation by eliminating the use of conditional branches and
  scatter/gather memory access as much as possible.
</p>

<h2 id="environment">Supported environments</h2>

<p>
  This library currently supports several SIMD architectures :
</p>

<ul class="disc">
  <li>x86 - SSE2, SSE4.1, AVX, FMA4, AVX2+FMA3, AVX512F</li>
  <li>AArch64 - Advanced SIMD</li>
  <li>AArch32 - NEON</li>
</ul>


<p>
  For x86 architecture, the library also provides dispatchers that
  automatically choose the best subroutines for the computer the
  library is run.
</p>

<p>
  In addition to the SIMD implementation, Pure C (scalar) version is
  provided.
</p>

<p>
  The supported combinations of the architecture, operating system and
  compiler are shown below.
</p>

<div style="margin-top: 1.0cm;"></div>

<table style="text-align:center;" align="center">
  <tr align="center">
    <td class="caption">Table 1: Environment support matrix</td>
  </tr>
  <tr align="center">
    <td>
      <table class="lt">
        <tr>
          <td class="lt-hl"></td>
	  <td></td>
          <td class="lt-hl"></td>
          <td class="lt-hl"></td>
          <td class="lt-hl"></td>
          <td class="lt-hl"></td>
        </tr>
	<tr>
	  <td class="lt-br"></td>
	  <td></td>
	  <td class="lt-blr" align="center">GCC</td>
	  <td class="lt-br" align="center">Clang</td>
	  <td class="lt-br" align="center">Intel Compiler</td>
	  <td class="lt-b" align="center">MSVC</td>
	</tr>
        <tr>
          <td class="lt-hl"></td>
	  <td></td>
	  <td class="lt-hl"></td>
          <td class="lt-hl"></td>
          <td class="lt-hl"></td>
          <td class="lt-hl"></td>
          <td class="lt-hl"></td>
        </tr>
	<tr>
	  <td class="lt-r" align="left">x86 (64bit), Linux</td>
	  <td></td>
	  <td class="lt-lr" align="center">Supported</td>
	  <td class="lt-r" align="center">Supported</td>
	  <td class="lt-r" align="center">Supported(*1)</td>
	  <td class="lt-" align="center">N/A</td>
	</tr>
	<tr>
	  <td class="lt-r" align="left">x86 (32bit), Linux</td>
	  <td></td>
	  <td class="lt-lr" align="center">Supported(*2)</td>
	  <td class="lt-r" align="center">Supported(*2)</td>
	  <td class="lt-r" align="center"></td>
	  <td class="lt-" align="center">N/A</td>
	</tr>
	<tr>
	  <td class="lt-r" align="left">AArch64, Linux</td>
	  <td></td>
	  <td class="lt-lr" align="center">Supported</td>
	  <td class="lt-r" align="center">Supported</td>
	  <td class="lt-r" align="center">N/A</td>
	  <td class="lt-" align="center">N/A</td>
	</tr>
	<tr>
	  <td class="lt-r" align="left">AArch32, Linux</td>
	  <td></td>
	  <td class="lt-lr" align="center">Supported(*3)</td>
	  <td class="lt-r" align="center">Supported(*3)</td>
	  <td class="lt-r" align="center">N/A</td>
	  <td class="lt-" align="center">N/A</td>
	</tr>
	<tr>
	  <td class="lt-r" align="left">x86 (64bit), OS X</td>
	  <td></td>
	  <td class="lt-lr" align="center">Supported</td>
	  <td class="lt-r" align="center">Supported</td>
	  <td class="lt-r" align="center">N/A</td>
	  <td class="lt-" align="center">N/A</td>
	</tr>
	<tr>
	  <td class="lt-r" align="left">x86 (64bit), Windows</td>
	  <td></td>
	  <td class="lt-lr" align="center">Supported(Cygwin)(*4)</td>
	  <td class="lt-r" align="center">Supported(Cygwin)(*4)</td>
	  <td class="lt-r" align="center"></td>
	  <td class="lt-" align="center">Supported(*5)</td>
	</tr>
	<tr>
	  <td class="lt-br" align="left">Generic</td>
	  <td></td>
	  <td class="lt-blr" align="center">Supported(*6)</td>
	  <td class="lt-br" align="center">Supported(*6)</td>
	  <td class="lt-br" align="center"></td>
	  <td class="lt-b" align="center"></td>
	</tr>
      </table>
    </td>
  </tr>
</table>

<div style="margin-top: 2.0cm;"></div>

<p>
  The supported versions of the compilers are as follows.
</p>
  
<ul class="disc">
  <li>GCC : version 5 and later</li>
  <li>Clang : version 3.9 and later</li>
  <li>Intel Compiler : ICC version 17</li>
  <li>MSVC : Visual Studio 2015</li>
</ul>

<br></br>

<p>
  *1 FMA4 is not supported by Intel Compiler.
</p>

<p>
  *2 SSE2 is required to run the scalar functions on 32-bit x86
  architecture. x87 is not supported.
</p>

<p>
  *3 NEON has only single precision support. The computation results
  are not in full accuracy since NEON is not IEEE 754-compliant.
</p>

<p>
  *4 AVX functions are not supported for Cygwin, since AVX is not
  supported by Cygwin ABI.
</p>

<p>
  *5 AVX512F is not supported by Visual Studio 2015.
</p>

<p>
  *6 Generic architecture is supported through GCC/Clang vector
  extensions. IEEE 754-compliant 64-bit and 32-bit calculation is
  required.
</p>

<h2 id="install">Compiling and installing the library</h2>

<h3>Compiling library on Linux</h3>

<p>
  You need to install libmpfr and OpenMP(libmpfr is only required to
  build the tester, and it is not linked to the library.) Change
  directory to sleef-3.X directory and run make.  The built headers
  and libraries will be located under include and lib directories.
</p>

<h3>Compiling library with Microsoft Visual C++</h3>

<p>
Below is the instruction for compiling SLEEF with Microsoft Visual C++
2015.
</p>

<ol>
  <li>Install Visual Studio 2015 or later, along with Cygwin</li>
  <li>Copy vcvars64.bat to a working directory. This file is usually
    in the following directory.
    <pre style="font-size:0.8em;">C:\Program Files (x86)\MSVCCommunity2015\VC\bin\amd64</pre></li>
  <li>Add the following line at the end of the copy of vcvars64.bat
    <pre style="font-size:0.8em;">if "%SHELL%"=="/bin/bash" c:\cygwin64\bin\bash.exe</pre></li>
  <li>Execute the copy of vcvars64.bat within the Cygwin bash
  shell.</li>
  <li>Go to sleef-3.X directory and run "make -f Makefile.vc"</li>
</ol>


<h2 id="history">Credit</h2>

<p>
  The main developer is Naoki Shibata at Nara Institute of Science and
  Technology.
</p>

<p>
  Francesco Petrogalli at ARM Ltd. contributed the helper for AArch64
  (helperadvsimd.h). He also reviewed the code, gave precious comments
  and suggestions.
</p>

<p>
  Hal Finkel at Argonne Leadership Computing Facility is now working
  on <a class="underlined"
  href="https://reviews.llvm.org/D24951">importing and adapting SLEEF
  as an LLVM runtime</a>. He also gave precious comments.
</p>

<h2 id="license">License</h2>

<p>
SLEEF is distributed
under <a class="underlined" href="http://www.boost.org/LICENSE_1_0.txt">Boost Software
License Version 1.0</a>.
</p>

<h2 id="history">History</h2>

<h3>3.1 (Released on July ?, 2017)</h3>
<ul class="disc">
  <li>Added AArch64 support</li>
  <li>Implemented the remaining C99 math functions : lgamma, tgamma,
  erf, erfc, fabs, copysign, fmax, fmin, fdim, trunc, floor, ceil,
  round, rint, modf, ldexp, nextafter, frexp, hypot, and fmod.</li>
  <li>Added dispatcher for x86 functions</li>
  <li>Improved reduction of trigonometric funcions</li>
  <li>Added support for 32-bit x86, Cygwin, etc.</li>
  <li>Improved tester</li>
  <li>Etc.</li>
</ul>

<h3>3.0 (Released on Feb. 7, 2017)</h3>
<ul class="disc">
  <li>New API is defined</li>
  <li>Functions for DFT are added</li>
  <li>sincospi functions are added</li>
  <li>gencoef now supports single, extended and quad precision in addition to double precision</li>
  <li>Linux, Windows and Mac OS X are supported</li>
  <li>GCC, Clang, Intel Compiler, Microsoft Visual C++ are supported</li>
  <li>The library can be compiled as DLLs</li>
  <li>Files needed for creating a debian package are now included</li>
</ul>

<h2 id="related">Related projects and links</h2>

<ul class="disc">
  <li>Mustafa A. Mohamad is developing <a class="underlined"
  href="https://github.com/musm/SLEEF.jl">a pure Julia port of the
  SLEEF math library</a>.</li>
  <li>Hal Finkel has <a class="underlined"
  href="https://github.com/hfinkel/sleef-bgq">adapted SLEEF to
  PowerPC/QPX</a>. SLEEF is running on Mira IBM BG/Q supercomputer at
  Argonne National Labolatory.</li>
  <li>SLEEF is adopted in <a class="underlined"
  href="http://www.menuetos.net/sc151.html">MenuetOS</a>.</li>
  <br/>
  <li><a class="underlined"
  href="https://software.intel.com/en-us/node/524289">Intel Short
  Vector Math Library (SVML)</a> is a commercial library of vectorized
  math functions, which provides similar functionality to
  SLEEF. Recently, some of the codes are published as free software,
  and it is now <a class="underlined"
  href="https://sourceware.org/git/?p=glibc.git;a=tree;f=sysdeps/x86_64/fpu/multiarch">
  a part of glibc</a>.</li>
</ul>

</body>
</html>
